{"ast":null,"code":"var _jsxFileName = \"/Users/sandeepsinghrawat/Desktop/react-basic/selfreact/frontend/src/store/Provider.js\",\n    _s = $RefreshSig$();\n\nimport { useReducer } from \"react\";\nimport Context from \"./Context\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst defaultCartState = {\n  items: [],\n  totalAmount: 0\n};\n\nconst cartReducer = (preState, action) => {\n  if (action.type === \"ADD_ITEM\") {\n    const updatedAmount = preState.totalAmount + action.payload.price * action.payload.amount;\n    const existingCartItemIndex = preState.items.findIndex(item => item.id === action.payload.id);\n    const existingCartItem = preState.items[existingCartItemIndex];\n    let updateItem;\n    let updateItems;\n\n    if (existingCartItem) {\n      updateItem = { ...existingCartItem,\n        amount: existingCartItem.amount + action.payload.amount\n      };\n      updateItems = [...preState.items];\n      updateItem[existingCartItemIndex] = updateItem;\n    }\n\n    const updatedItems = preState.items.concat(action.payload);\n    return {\n      items: updatedItems,\n      totalAmount: updatedAmount\n    };\n  }\n\n  return defaultCartState;\n};\n\nconst Provider = props => {\n  _s();\n\n  const [cartState, dispatchCartAction] = useReducer(cartReducer, defaultCartState);\n\n  const addItemToCartHandler = item => {\n    dispatchCartAction({\n      type: 'ADD_ITEM',\n      payload: item\n    });\n  };\n\n  const removeItemFromCartHandler = id => {\n    dispatchCartAction({\n      type: 'REMOVE_ITEM',\n      id: id\n    });\n  };\n\n  const cartContext = {\n    items: cartState.items,\n    totalAmount: cartState.totalAmount,\n    addItem: addItemToCartHandler,\n    deleteItem: removeItemFromCartHandler\n  };\n  return /*#__PURE__*/_jsxDEV(Context.Provider, {\n    value: cartContext,\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 10\n  }, this);\n};\n\n_s(Provider, \"PxEugEseoIJIbjFwtAJal5z5ClY=\");\n\n_c = Provider;\nexport default Provider;\n\nvar _c;\n\n$RefreshReg$(_c, \"Provider\");","map":{"version":3,"names":["useReducer","Context","defaultCartState","items","totalAmount","cartReducer","preState","action","type","updatedAmount","payload","price","amount","existingCartItemIndex","findIndex","item","id","existingCartItem","updateItem","updateItems","updatedItems","concat","Provider","props","cartState","dispatchCartAction","addItemToCartHandler","removeItemFromCartHandler","cartContext","addItem","deleteItem","children"],"sources":["/Users/sandeepsinghrawat/Desktop/react-basic/selfreact/frontend/src/store/Provider.js"],"sourcesContent":["import { useReducer } from \"react\";\nimport Context from \"./Context\";\n\n\nconst defaultCartState = {\n  items: [],\n  totalAmount: 0\n};\nconst cartReducer = (preState, action) => {\n  if (action.type === \"ADD_ITEM\") {\n    const updatedAmount = preState.totalAmount + action.payload.price * action.payload.amount;\n    const existingCartItemIndex = preState.items.findIndex(item => item.id === action.payload.id);\n    const existingCartItem = preState.items[existingCartItemIndex];\n    let updateItem;\n    let updateItems;\n\n    if (existingCartItem) {\n      updateItem = {\n        ...existingCartItem,\n        amount: existingCartItem.amount + action.payload.amount\n      }\n      updateItems = [...preState.items];\n      updateItem[existingCartItemIndex] = updateItem;\n    }\n\n    const updatedItems = preState.items.concat(action.payload);\n    return {\n      items: updatedItems,\n      totalAmount: updatedAmount\n    };\n  }\n  return defaultCartState;\n};\n\nconst Provider = (props) => {\n\n  const [cartState, dispatchCartAction] = useReducer(cartReducer, defaultCartState);\n\n  const addItemToCartHandler = (item) => {\n    dispatchCartAction({type: 'ADD_ITEM', payload: item});\n  };\n\n  const removeItemFromCartHandler = (id) => {\n    dispatchCartAction({type: 'REMOVE_ITEM', id: id});\n  };\n\n  const cartContext = {\n    items: cartState.items,\n    totalAmount: cartState.totalAmount,\n    addItem: addItemToCartHandler,\n    deleteItem: removeItemFromCartHandler\n  };\n\n  return <Context.Provider value={cartContext}>{props.children}</Context.Provider>\n};\n\nexport default Provider;"],"mappings":";;;AAAA,SAASA,UAAT,QAA2B,OAA3B;AACA,OAAOC,OAAP,MAAoB,WAApB;;AAGA,MAAMC,gBAAgB,GAAG;EACvBC,KAAK,EAAE,EADgB;EAEvBC,WAAW,EAAE;AAFU,CAAzB;;AAIA,MAAMC,WAAW,GAAG,CAACC,QAAD,EAAWC,MAAX,KAAsB;EACxC,IAAIA,MAAM,CAACC,IAAP,KAAgB,UAApB,EAAgC;IAC9B,MAAMC,aAAa,GAAGH,QAAQ,CAACF,WAAT,GAAuBG,MAAM,CAACG,OAAP,CAAeC,KAAf,GAAuBJ,MAAM,CAACG,OAAP,CAAeE,MAAnF;IACA,MAAMC,qBAAqB,GAAGP,QAAQ,CAACH,KAAT,CAAeW,SAAf,CAAyBC,IAAI,IAAIA,IAAI,CAACC,EAAL,KAAYT,MAAM,CAACG,OAAP,CAAeM,EAA5D,CAA9B;IACA,MAAMC,gBAAgB,GAAGX,QAAQ,CAACH,KAAT,CAAeU,qBAAf,CAAzB;IACA,IAAIK,UAAJ;IACA,IAAIC,WAAJ;;IAEA,IAAIF,gBAAJ,EAAsB;MACpBC,UAAU,GAAG,EACX,GAAGD,gBADQ;QAEXL,MAAM,EAAEK,gBAAgB,CAACL,MAAjB,GAA0BL,MAAM,CAACG,OAAP,CAAeE;MAFtC,CAAb;MAIAO,WAAW,GAAG,CAAC,GAAGb,QAAQ,CAACH,KAAb,CAAd;MACAe,UAAU,CAACL,qBAAD,CAAV,GAAoCK,UAApC;IACD;;IAED,MAAME,YAAY,GAAGd,QAAQ,CAACH,KAAT,CAAekB,MAAf,CAAsBd,MAAM,CAACG,OAA7B,CAArB;IACA,OAAO;MACLP,KAAK,EAAEiB,YADF;MAELhB,WAAW,EAAEK;IAFR,CAAP;EAID;;EACD,OAAOP,gBAAP;AACD,CAxBD;;AA0BA,MAAMoB,QAAQ,GAAIC,KAAD,IAAW;EAAA;;EAE1B,MAAM,CAACC,SAAD,EAAYC,kBAAZ,IAAkCzB,UAAU,CAACK,WAAD,EAAcH,gBAAd,CAAlD;;EAEA,MAAMwB,oBAAoB,GAAIX,IAAD,IAAU;IACrCU,kBAAkB,CAAC;MAACjB,IAAI,EAAE,UAAP;MAAmBE,OAAO,EAAEK;IAA5B,CAAD,CAAlB;EACD,CAFD;;EAIA,MAAMY,yBAAyB,GAAIX,EAAD,IAAQ;IACxCS,kBAAkB,CAAC;MAACjB,IAAI,EAAE,aAAP;MAAsBQ,EAAE,EAAEA;IAA1B,CAAD,CAAlB;EACD,CAFD;;EAIA,MAAMY,WAAW,GAAG;IAClBzB,KAAK,EAAEqB,SAAS,CAACrB,KADC;IAElBC,WAAW,EAAEoB,SAAS,CAACpB,WAFL;IAGlByB,OAAO,EAAEH,oBAHS;IAIlBI,UAAU,EAAEH;EAJM,CAApB;EAOA,oBAAO,QAAC,OAAD,CAAS,QAAT;IAAkB,KAAK,EAAEC,WAAzB;IAAA,UAAuCL,KAAK,CAACQ;EAA7C;IAAA;IAAA;IAAA;EAAA,QAAP;AACD,CApBD;;GAAMT,Q;;KAAAA,Q;AAsBN,eAAeA,QAAf"},"metadata":{},"sourceType":"module"}